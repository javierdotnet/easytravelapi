/**
 * EasyTravelApi
 * API for travel agents
 *
 * OpenAPI spec version: 0.1.9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EasyTravelApi);
  }
}(this, function(expect, EasyTravelApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EasyTravelApi.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('bookActivity', function() {
      it('should call bookActivity successfully', function(done) {
        //uncomment below and update the code to test bookActivity
        //instance.bookActivity(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bookHotel', function() {
      it('should call bookHotel successfully', function(done) {
        //uncomment below and update the code to test bookHotel
        //instance.bookHotel(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bookTransfer', function() {
      it('should call bookTransfer successfully', function(done) {
        //uncomment below and update the code to test bookTransfer
        //instance.bookTransfer(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cancelBooking', function() {
      it('should call cancelBooking successfully', function(done) {
        //uncomment below and update the code to test cancelBooking
        //instance.cancelBooking(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('confirmServices', function() {
      it('should call confirmServices successfully', function(done) {
        //uncomment below and update the code to test confirmServices
        //instance.confirmServices(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getActivityPriceDetails', function() {
      it('should call getActivityPriceDetails successfully', function(done) {
        //uncomment below and update the code to test getActivityPriceDetails
        //instance.getActivityPriceDetails(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAvailabeTransfers', function() {
      it('should call getAvailabeTransfers successfully', function(done) {
        //uncomment below and update the code to test getAvailabeTransfers
        //instance.getAvailabeTransfers(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAvailableActivities', function() {
      it('should call getAvailableActivities successfully', function(done) {
        //uncomment below and update the code to test getAvailableActivities
        //instance.getAvailableActivities(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAvailableHotels', function() {
      it('should call getAvailableHotels successfully', function(done) {
        //uncomment below and update the code to test getAvailableHotels
        //instance.getAvailableHotels(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBookings', function() {
      it('should call getBookings successfully', function(done) {
        //uncomment below and update the code to test getBookings
        //instance.getBookings(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDataSheet', function() {
      it('should call getDataSheet successfully', function(done) {
        //uncomment below and update the code to test getDataSheet
        //instance.getDataSheet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGrantedHotels', function() {
      it('should call getGrantedHotels successfully', function(done) {
        //uncomment below and update the code to test getGrantedHotels
        //instance.getGrantedHotels(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getHotelPriceDetails', function() {
      it('should call getHotelPriceDetails successfully', function(done) {
        //uncomment below and update the code to test getHotelPriceDetails
        //instance.getHotelPriceDetails(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPortfolio', function() {
      it('should call getPortfolio successfully', function(done) {
        //uncomment below and update the code to test getPortfolio
        //instance.getPortfolio(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRoomingList', function() {
      it('should call getRoomingList successfully', function(done) {
        //uncomment below and update the code to test getRoomingList
        //instance.getRoomingList(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getToken', function() {
      it('should call getToken successfully', function(done) {
        //uncomment below and update the code to test getToken
        //instance.getToken(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransferPriceDetails', function() {
      it('should call getTransferPriceDetails successfully', function(done) {
        //uncomment below and update the code to test getTransferPriceDetails
        //instance.getTransferPriceDetails(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('update', function() {
      it('should call update successfully', function(done) {
        //uncomment below and update the code to test update
        //instance.update(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
