/**
 * EasyTravelApi
 * API for travel agents
 *
 * OpenAPI spec version: 0.1.9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EasyTravelApi);
  }
}(this, function(expect, EasyTravelApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EasyTravelApi.HolderForAnActivityDate();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('HolderForAnActivityDate', function() {
    it('should create an instance of HolderForAnActivityDate', function() {
      // uncomment below and update the code to test HolderForAnActivityDate
      //var instane = new EasyTravelApi.HolderForAnActivityDate();
      //expect(instance).to.be.a(EasyTravelApi.HolderForAnActivityDate);
    });

    it('should have the property _date (base name: "date")', function() {
      // uncomment below and update the code to test the property _date
      //var instane = new EasyTravelApi.HolderForAnActivityDate();
      //expect(instance).to.be();
    });

    it('should have the property time (base name: "time")', function() {
      // uncomment below and update the code to test the property time
      //var instane = new EasyTravelApi.HolderForAnActivityDate();
      //expect(instance).to.be();
    });

    it('should have the property key (base name: "key")', function() {
      // uncomment below and update the code to test the property key
      //var instane = new EasyTravelApi.HolderForAnActivityDate();
      //expect(instance).to.be();
    });

    it('should have the property retailPrice (base name: "retailPrice")', function() {
      // uncomment below and update the code to test the property retailPrice
      //var instane = new EasyTravelApi.HolderForAnActivityDate();
      //expect(instance).to.be();
    });

    it('should have the property netPrice (base name: "netPrice")', function() {
      // uncomment below and update the code to test the property netPrice
      //var instane = new EasyTravelApi.HolderForAnActivityDate();
      //expect(instance).to.be();
    });

    it('should have the property commission (base name: "commission")', function() {
      // uncomment below and update the code to test the property commission
      //var instane = new EasyTravelApi.HolderForAnActivityDate();
      //expect(instance).to.be();
    });

  });

}));
