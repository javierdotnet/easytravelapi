/**
 * EasyTravelApi
 * API for travel agents
 *
 * OpenAPI spec version: 0.1.9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Amount'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Amount'));
  } else {
    // Browser globals (root is window)
    if (!root.EasyTravelApi) {
      root.EasyTravelApi = {};
    }
    root.EasyTravelApi.Booking = factory(root.EasyTravelApi.ApiClient, root.EasyTravelApi.Amount);
  }
}(this, function(ApiClient, Amount) {
  'use strict';




  /**
   * The Booking model module.
   * @module model/Booking
   * @version 0.1.9
   */

  /**
   * Constructs a new <code>Booking</code>.
   * @alias module:model/Booking
   * @class
   */
  var exports = function() {
    var _this = this;
















  };

  /**
   * Constructs a <code>Booking</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Booking} obj Optional instance to populate.
   * @return {module:model/Booking} The populated <code>Booking</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('bookingId')) {
        obj['bookingId'] = ApiClient.convertToType(data['bookingId'], 'String');
      }
      if (data.hasOwnProperty('created')) {
        obj['created'] = ApiClient.convertToType(data['created'], 'String');
      }
      if (data.hasOwnProperty('createdBy')) {
        obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
      }
      if (data.hasOwnProperty('modified')) {
        obj['modified'] = ApiClient.convertToType(data['modified'], 'String');
      }
      if (data.hasOwnProperty('serviceType')) {
        obj['serviceType'] = ApiClient.convertToType(data['serviceType'], 'String');
      }
      if (data.hasOwnProperty('serviceDescription')) {
        obj['serviceDescription'] = ApiClient.convertToType(data['serviceDescription'], 'String');
      }
      if (data.hasOwnProperty('start')) {
        obj['start'] = ApiClient.convertToType(data['start'], 'String');
      }
      if (data.hasOwnProperty('end')) {
        obj['end'] = ApiClient.convertToType(data['end'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('leadName')) {
        obj['leadName'] = ApiClient.convertToType(data['leadName'], 'String');
      }
      if (data.hasOwnProperty('retailValue')) {
        obj['retailValue'] = Amount.constructFromObject(data['retailValue']);
      }
      if (data.hasOwnProperty('netValue')) {
        obj['netValue'] = Amount.constructFromObject(data['netValue']);
      }
      if (data.hasOwnProperty('commissionValue')) {
        obj['commissionValue'] = Amount.constructFromObject(data['commissionValue']);
      }
      if (data.hasOwnProperty('commentsToProvider')) {
        obj['commentsToProvider'] = ApiClient.convertToType(data['commentsToProvider'], 'String');
      }
      if (data.hasOwnProperty('privateComments')) {
        obj['privateComments'] = ApiClient.convertToType(data['privateComments'], 'String');
      }
    }
    return obj;
  }

  /**
   * The booking id
   * @member {String} bookingId
   */
  exports.prototype['bookingId'] = undefined;
  /**
   * When this service was created. In ISO8651 format
   * @member {String} created
   */
  exports.prototype['created'] = undefined;
  /**
   * Who created this service booking
   * @member {String} createdBy
   */
  exports.prototype['createdBy'] = undefined;
  /**
   * Last modification date for this service in ISO8651 format
   * @member {String} modified
   */
  exports.prototype['modified'] = undefined;
  /**
   * Type of service. Intended to be HOTEL, TRANSFER, ACTIVITY, ...
   * @member {String} serviceType
   */
  exports.prototype['serviceType'] = undefined;
  /**
   * Description of the service
   * @member {String} serviceDescription
   */
  exports.prototype['serviceDescription'] = undefined;
  /**
   * When this service starts using locale. In YYYYMMDD format
   * @member {String} start
   */
  exports.prototype['start'] = undefined;
  /**
   * When this service ends using locale. In YYYYMMDD format
   * @member {String} end
   */
  exports.prototype['end'] = undefined;
  /**
   * Status for this service. E.g. OK, ONREQUEST, CANCELLED, ...
   * @member {String} status
   */
  exports.prototype['status'] = undefined;
  /**
   * This service lead name
   * @member {String} leadName
   */
  exports.prototype['leadName'] = undefined;
  /**
   * @member {module:model/Amount} retailValue
   */
  exports.prototype['retailValue'] = undefined;
  /**
   * @member {module:model/Amount} netValue
   */
  exports.prototype['netValue'] = undefined;
  /**
   * @member {module:model/Amount} commissionValue
   */
  exports.prototype['commissionValue'] = undefined;
  /**
   * Comments from the customer
   * @member {String} commentsToProvider
   */
  exports.prototype['commentsToProvider'] = undefined;
  /**
   * Comments for you. Not to be shown to the customer
   * @member {String} privateComments
   */
  exports.prototype['privateComments'] = undefined;



  return exports;
}));


