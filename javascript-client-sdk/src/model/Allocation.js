/**
 * EasyTravelApi
 * API for travel agents
 *
 * OpenAPI spec version: 0.1.9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BoardPrice'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BoardPrice'));
  } else {
    // Browser globals (root is window)
    if (!root.EasyTravelApi) {
      root.EasyTravelApi = {};
    }
    root.EasyTravelApi.Allocation = factory(root.EasyTravelApi.ApiClient, root.EasyTravelApi.BoardPrice);
  }
}(this, function(ApiClient, BoardPrice) {
  'use strict';




  /**
   * The Allocation model module.
   * @module model/Allocation
   * @version 0.1.9
   */

  /**
   * Constructs a new <code>Allocation</code>.
   * An occupied room and the available board basis
   * @alias module:model/Allocation
   * @class
   */
  var exports = function() {
    var _this = this;







  };

  /**
   * Constructs a <code>Allocation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Allocation} obj Optional instance to populate.
   * @return {module:model/Allocation} The populated <code>Allocation</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('numberOfRooms')) {
        obj['numberOfRooms'] = ApiClient.convertToType(data['numberOfRooms'], 'Number');
      }
      if (data.hasOwnProperty('paxPerRoom')) {
        obj['paxPerRoom'] = ApiClient.convertToType(data['paxPerRoom'], 'Number');
      }
      if (data.hasOwnProperty('ages')) {
        obj['ages'] = ApiClient.convertToType(data['ages'], ['Number']);
      }
      if (data.hasOwnProperty('roomId')) {
        obj['roomId'] = ApiClient.convertToType(data['roomId'], 'String');
      }
      if (data.hasOwnProperty('roomName')) {
        obj['roomName'] = ApiClient.convertToType(data['roomName'], 'String');
      }
      if (data.hasOwnProperty('prices')) {
        obj['prices'] = ApiClient.convertToType(data['prices'], [BoardPrice]);
      }
    }
    return obj;
  }

  /**
   * Number of rooms
   * @member {Number} numberOfRooms
   */
  exports.prototype['numberOfRooms'] = undefined;
  /**
   * Pax per room
   * @member {Number} paxPerRoom
   */
  exports.prototype['paxPerRoom'] = undefined;
  /**
   * Ages. If not present we will assume the pax is an adult
   * @member {Array.<Number>} ages
   */
  exports.prototype['ages'] = undefined;
  /**
   * This room type id
   * @member {String} roomId
   */
  exports.prototype['roomId'] = undefined;
  /**
   * This room type name
   * @member {String} roomName
   */
  exports.prototype['roomName'] = undefined;
  /**
   * List of available board basis and prices for each board
   * @member {Array.<module:model/BoardPrice>} prices
   */
  exports.prototype['prices'] = undefined;



  return exports;
}));


